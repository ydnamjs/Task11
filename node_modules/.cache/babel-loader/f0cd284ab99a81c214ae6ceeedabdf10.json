{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\CISC275\\\\Broken Code\\\\quizzer_start\\\\src\\\\quizzer\\\\QuizList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { QuizCard } from \"./QuizCard\";\nimport \"./QuizList.css\";\nimport { QuizView } from \"./QuizView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const QuizList = _ref => {\n  _s();\n\n  let {\n    quizzes,\n    editQuiz,\n    deleteQuiz,\n    showModal\n  } = _ref;\n  const [displayId, setDisplayId] = useState(null);\n\n  const handleQuizView = id => {\n    setDisplayId(id);\n  };\n\n  const resetQuizView = () => {\n    setDisplayId(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz_list\",\n    children: [!displayId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [quizzes.map(quiz => /*#__PURE__*/_jsxDEV(QuizCard, {\n        quiz: quiz,\n        handleClick: handleQuizView\n      }, quiz.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"add_btn\",\n        onClick: showModal,\n        children: \"Add New Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), quizzes.map(quiz => {\n      if (displayId === quiz.id) {\n        return /*#__PURE__*/_jsxDEV(QuizView, {\n          quiz: quiz,\n          editQuiz: editQuiz,\n          deleteQuiz: deleteQuiz,\n          resetView: resetQuizView\n        }, quiz.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuizList, \"PtR2k45VmUqwcb8S+GYe6BgzSvY=\");\n\n_c = QuizList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizList\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/CISC275/Broken Code/quizzer_start/src/quizzer/QuizList.tsx"],"names":["React","useState","Button","QuizCard","QuizView","QuizList","quizzes","editQuiz","deleteQuiz","showModal","displayId","setDisplayId","handleQuizView","id","resetQuizView","map","quiz"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,QAAyB,YAAzB;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAKd;AAAA;;AAAA,MALe;AACrBC,IAAAA,OADqB;AAErBC,IAAAA,QAFqB;AAGrBC,IAAAA,UAHqB;AAIrBC,IAAAA;AAJqB,GAKf;AACN,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAgB,IAAhB,CAA1C;;AAEA,QAAMW,cAAc,GAAIC,EAAD,IAAgB;AACnCF,IAAAA,YAAY,CAACE,EAAD,CAAZ;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AACxBH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACK,CAACD,SAAD,iBACG;AAAA,iBACKJ,OAAO,CAACS,GAAR,CAAaC,IAAD,iBACT,QAAC,QAAD;AAEI,QAAA,IAAI,EAAEA,IAFV;AAGI,QAAA,WAAW,EAAEJ;AAHjB,SACSI,IAAI,CAACH,EADd;AAAA;AAAA;AAAA;AAAA,cADH,CADL,eAQI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAEJ,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA,oBAFR,EAeKH,OAAO,CAACS,GAAR,CAAaC,IAAD,IAAgB;AACzB,UAAIN,SAAS,KAAKM,IAAI,CAACH,EAAvB,EAA2B;AACvB,4BACI,QAAC,QAAD;AAEI,UAAA,IAAI,EAAEG,IAFV;AAGI,UAAA,QAAQ,EAAET,QAHd;AAII,UAAA,UAAU,EAAEC,UAJhB;AAKI,UAAA,SAAS,EAAEM;AALf,WACSE,IAAI,CAACH,EADd;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH;AACJ,KAZA,CAfL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CA/CM;;GAAMR,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Quiz } from \"../interfaces/quiz\";\r\nimport { QuizCard } from \"./QuizCard\";\r\nimport \"./QuizList.css\";\r\nimport { QuizView } from \"./QuizView\";\r\n\r\nexport const QuizList = ({\r\n    quizzes,\r\n    editQuiz,\r\n    deleteQuiz,\r\n    showModal\r\n}: {}) => {\r\n    const [displayId, setDisplayId] = useState<null | number>(null);\r\n\r\n    const handleQuizView = (id: number) => {\r\n        setDisplayId(id);\r\n    };\r\n\r\n    const resetQuizView = () => {\r\n        setDisplayId(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"quiz_list\">\r\n            {!displayId && (\r\n                <>\r\n                    {quizzes.map((quiz: Quiz) => (\r\n                        <QuizCard\r\n                            key={quiz.id}\r\n                            quiz={quiz}\r\n                            handleClick={handleQuizView}\r\n                        ></QuizCard>\r\n                    ))}\r\n                    <Button className=\"add_btn\" onClick={showModal}>\r\n                        Add New Quiz\r\n                    </Button>\r\n                </>\r\n            )}\r\n            {quizzes.map((quiz: Quiz) => {\r\n                if (displayId === quiz.id) {\r\n                    return (\r\n                        <QuizView\r\n                            key={quiz.id}\r\n                            quiz={quiz}\r\n                            editQuiz={editQuiz}\r\n                            deleteQuiz={deleteQuiz}\r\n                            resetView={resetQuizView}\r\n                        ></QuizView>\r\n                    );\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}