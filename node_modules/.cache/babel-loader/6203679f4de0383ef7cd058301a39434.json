{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\CISC275\\\\Broken Code\\\\quizzer_start\\\\src\\\\quizzer\\\\QuestionEdit.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport \"./QuestionEdit.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function QuestionEdit(_ref) {\n  _s();\n\n  let {\n    index,\n    lastIndex,\n    question,\n    editQuestion,\n    removeQuestion,\n    swapQuestion\n  } = _ref;\n  const [a, b] = useState(question.options.findIndex(s => question.expected === s));\n\n  const handleNumOptions = e => {\n    b(0);\n    const newNum = parseInt(e.target.value) < 1 ? 1 : parseInt(e.target.value);\n    editQuestion(question.id, { ...question,\n      type: \"multiple_choice_question\",\n      expected: \"Example Answer\",\n      options: Array(newNum).fill(\"Example Answer\")\n    });\n  };\n\n  const handleSwitch = () => {\n    b(0);\n    editQuestion(question.id, { ...question,\n      type: \"multiple_choice_question\",\n      expected: \"Example Answer\",\n      options: Array(3).fill(\"Example Answer\")\n    });\n  };\n\n  const handlePoints = e => {\n    question.points = parseInt(e.target.value);\n    editQuestion(question.id, question);\n  };\n\n  const handleChoiceChange = (e, i) => {\n    const newOptions = [...question.options];\n    newOptions.splice(i, 1, e.target.value);\n    editQuestion(question.id, { ...question,\n      options: newOptions,\n      expected: a === i ? e.target.value : question.expected\n    });\n  };\n\n  const handleRadioChange = e => {\n    const idx = parseInt(e.target.value);\n    b(idx);\n    editQuestion(question.id, { ...question,\n      expected: question.options[idx]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit_question\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit_title_row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit_title_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [index + 1, \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"title_input\",\n            controlId: \"editTitleFormId\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: question.body,\n              \"data-testid\": \"edit_question_title\",\n              onChange: e => {\n                editQuestion(question.id, { ...question,\n                  body: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit_title_box\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"points_input\",\n            controlId: \"editPointsFormId\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: question.points,\n              type: \"number\",\n              onChange: handlePoints\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"pt\", question.points !== 1 ? \"s\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit_answer_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type_form\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"questionTypeFormId\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Type: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                className: \"type_dropdown\",\n                value: question.type,\n                onChange: handleSwitch,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  \"data-testid\": \"question_type_dropdown_\" + index,\n                  value: \"multiple_choice_question\",\n                  children: \"Multiple Choice\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  \"data-testid\": \"question_type_dropdown_\" + index,\n                  value: \"short_answer_question\",\n                  children: \"Short Answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), question.type === \"multiple_choice_question\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"editNumChoicesId\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Choices: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  className: \"num_choices\",\n                  value: question.options.length,\n                  type: \"number\",\n                  onChange: handleNumOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this)\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [question.type === \"short_answer_question\" && /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formEditShortExpectedBox\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                value: question.expected,\n                onChange: e => {\n                  editQuestion(question.id, { ...question,\n                    expected: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this), question.type === \"multiple_choice_question\" && /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formEditMultipleExpectedBox\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this), question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"radio_question_box\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"radio\",\n                  name: \"questionChoice\" + index,\n                  value: i,\n                  checked: a === i,\n                  onChange: handleRadioChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  name: \"questionChoice\" + index,\n                  value: option,\n                  onChange: e => {\n                    handleChoiceChange(e, i);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 49\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swap_button_container\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: index === 0,\n            className: \"swap_button\",\n            onClick: () => {\n              swapQuestion(index, index - 1);\n            },\n            children: \"\\u25B2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: index === lastIndex,\n            className: \"swap_button\",\n            onClick: () => {\n              swapQuestion(index, index + 1);\n            },\n            children: \"\\u25BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit_question_footer\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          className: \"published_question_check\",\n          \"data-testid\": \"question_published_check\",\n          type: \"checkbox\",\n          id: \"is_question_published_check\",\n          label: \"Published\",\n          checked: question.published,\n          onChange: e => {\n            editQuestion(question.id, { ...question,\n              published: e.target.checked\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => {\n            removeQuestion(question.id);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuestionEdit, \"UUjBrgS9l6kLlI1/YIgmu+INyxc=\");\n\n_c = QuestionEdit;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionEdit\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/CISC275/Broken Code/quizzer_start/src/quizzer/QuestionEdit.tsx"],"names":["React","useState","Form","Button","QuestionEdit","index","lastIndex","question","editQuestion","removeQuestion","swapQuestion","a","b","options","findIndex","s","expected","handleNumOptions","e","newNum","parseInt","target","value","id","type","Array","fill","handleSwitch","handlePoints","points","handleChoiceChange","i","newOptions","splice","handleRadioChange","idx","body","length","map","option","published","checked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AAGA,OAAO,oBAAP;;;AAEA,OAAO,SAASC,YAAT,OAcS;AAAA;;AAAA,MAdc;AAC1BC,IAAAA,KAD0B;AAE1BC,IAAAA,SAF0B;AAG1BC,IAAAA,QAH0B;AAI1BC,IAAAA,YAJ0B;AAK1BC,IAAAA,cAL0B;AAM1BC,IAAAA;AAN0B,GAcd;AACZ,QAAM,CAACC,CAAD,EAAIC,CAAJ,IAASX,QAAQ,CACnBM,QAAQ,CAACM,OAAT,CAAiBC,SAAjB,CAA4BC,CAAD,IAAeR,QAAQ,CAACS,QAAT,KAAsBD,CAAhE,CADmB,CAAvB;;AAIA,QAAME,gBAAgB,GAAIC,CAAD,IAA4C;AACjEN,IAAAA,CAAC,CAAC,CAAD,CAAD;AACA,UAAMO,MAAM,GACRC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAR,GAA2B,CAA3B,GAA+B,CAA/B,GAAmCF,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAD/C;AAEAd,IAAAA,YAAY,CAACD,QAAQ,CAACgB,EAAV,EAAc,EACtB,GAAGhB,QADmB;AAEtBiB,MAAAA,IAAI,EAAE,0BAFgB;AAGtBR,MAAAA,QAAQ,EAAE,gBAHY;AAItBH,MAAAA,OAAO,EAAEY,KAAK,CAACN,MAAD,CAAL,CAAcO,IAAd,CAAmB,gBAAnB;AAJa,KAAd,CAAZ;AAMH,GAVD;;AAYA,QAAMC,YAAY,GAAG,MAAM;AACvBf,IAAAA,CAAC,CAAC,CAAD,CAAD;AACAJ,IAAAA,YAAY,CAACD,QAAQ,CAACgB,EAAV,EAAc,EACtB,GAAGhB,QADmB;AAEtBiB,MAAAA,IAAI,EAAE,0BAFgB;AAGtBR,MAAAA,QAAQ,EAAE,gBAHY;AAItBH,MAAAA,OAAO,EAAEY,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,gBAAd;AAJa,KAAd,CAAZ;AAMH,GARD;;AAUA,QAAME,YAAY,GAAIV,CAAD,IAA4C;AAChEX,IAAAA,QAAQ,CAACsB,MAAT,GAAkBT,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAA1B;AACGd,IAAAA,YAAY,CAACD,QAAQ,CAACgB,EAAV,EAAchB,QAAd,CAAZ;AACH,GAHD;;AAKA,QAAMuB,kBAAkB,GAAG,CACvBZ,CADuB,EAEvBa,CAFuB,KAGtB;AACD,UAAMC,UAAU,GAAG,CAAC,GAAGzB,QAAQ,CAACM,OAAb,CAAnB;AACAmB,IAAAA,UAAU,CAACC,MAAX,CAAkBF,CAAlB,EAAqB,CAArB,EAAwBb,CAAC,CAACG,MAAF,CAASC,KAAjC;AACAd,IAAAA,YAAY,CAACD,QAAQ,CAACgB,EAAV,EAAc,EACtB,GAAGhB,QADmB;AAEtBM,MAAAA,OAAO,EAAEmB,UAFa;AAGtBhB,MAAAA,QAAQ,EAAEL,CAAC,KAAKoB,CAAN,GAAUb,CAAC,CAACG,MAAF,CAASC,KAAnB,GAA2Bf,QAAQ,CAACS;AAHxB,KAAd,CAAZ;AAKH,GAXD;;AAaA,QAAMkB,iBAAiB,GAAIhB,CAAD,IAA4C;AAClE,UAAMiB,GAAG,GAAGf,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAApB;AACAV,IAAAA,CAAC,CAACuB,GAAD,CAAD;AACA3B,IAAAA,YAAY,CAACD,QAAQ,CAACgB,EAAV,EAAc,EACtB,GAAGhB,QADmB;AAEtBS,MAAAA,QAAQ,EAAET,QAAQ,CAACM,OAAT,CAAiBsB,GAAjB;AAFY,KAAd,CAAZ;AAIH,GAPD;;AASA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AAAA,uBAAK9B,KAAK,GAAG,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,KAAN;AACI,YAAA,SAAS,EAAC,aADd;AAEI,YAAA,SAAS,EAAC,iBAFd;AAAA,mCAII,QAAC,IAAD,CAAM,OAAN;AACI,cAAA,KAAK,EAAEE,QAAQ,CAAC6B,IADpB;AAEI,6BAAY,qBAFhB;AAGI,cAAA,QAAQ,EACJlB,CADM,IAEL;AACDV,gBAAAA,YAAY,CAACD,QAAQ,CAACgB,EAAV,EAAc,EACtB,GAAGhB,QADmB;AAEtB6B,kBAAAA,IAAI,EAAElB,CAAC,CAACG,MAAF,CAASC;AAFO,iBAAd,CAAZ;AAIH;AAVL;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAqBI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AACI,YAAA,SAAS,EAAC,cADd;AAEI,YAAA,SAAS,EAAC,kBAFd;AAAA,mCAII,QAAC,IAAD,CAAM,OAAN;AACI,cAAA,KAAK,EAAEf,QAAQ,CAACsB,MADpB;AAEI,cAAA,IAAI,EAAC,QAFT;AAGI,cAAA,QAAQ,EAAED;AAHd;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAWI;AAAA,6BAAOrB,QAAQ,CAACsB,MAAT,KAAoB,CAApB,GAAwB,GAAxB,GAA8B,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAoCI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,oBAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,MAAN;AACI,gBAAA,SAAS,EAAC,eADd;AAEI,gBAAA,KAAK,EAAEtB,QAAQ,CAACiB,IAFpB;AAGI,gBAAA,QAAQ,EAAEG,YAHd;AAAA,wCAKI;AACI,iCACI,4BAA4BtB,KAFpC;AAII,kBAAA,KAAK,EAAC,0BAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eAaI;AACI,iCACI,4BAA4BA,KAFpC;AAII,kBAAA,KAAK,EAAC,uBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EA0BKE,QAAQ,CAACiB,IAAT,KAAkB,0BAAlB,iBACG;AAAA,qCACI,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,SAAS,EAAC,kBAAtB;AAAA,wCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,kBAAA,SAAS,EAAC,aADd;AAEI,kBAAA,KAAK,EAAEjB,QAAQ,CAACM,OAAT,CAAiBwB,MAF5B;AAGI,kBAAA,IAAI,EAAC,QAHT;AAII,kBAAA,QAAQ,EAAEpB;AAJd;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,6BA3BR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAyCI;AAAA,uBACKV,QAAQ,CAACiB,IAAT,KAAkB,uBAAlB,iBACG,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,0BAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,gBAAA,KAAK,EAAEjB,QAAQ,CAACS,QADpB;AAEI,gBAAA,QAAQ,EACJE,CADM,IAEL;AACDV,kBAAAA,YAAY,CAACD,QAAQ,CAACgB,EAAV,EAAc,EACtB,GAAGhB,QADmB;AAEtBS,oBAAAA,QAAQ,EAAEE,CAAC,CAACG,MAAF,CAASC;AAFG,mBAAd,CAAZ;AAIH;AATL;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFR,EAiBKf,QAAQ,CAACiB,IAAT,KAAkB,0BAAlB,iBACG,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,6BAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEKjB,QAAQ,CAACM,OAAT,CAAiByB,GAAjB,CACG,CAACC,MAAD,EAAiBR,CAAjB,kBACI;AAEI,gBAAA,SAAS,EAAC,oBAFd;AAAA,wCAII,QAAC,IAAD,CAAM,KAAN;AACI,kBAAA,IAAI,EAAC,OADT;AAEI,kBAAA,IAAI,EACA,mBAAmB1B,KAH3B;AAKI,kBAAA,KAAK,EAAE0B,CALX;AAMI,kBAAA,OAAO,EAAEpB,CAAC,KAAKoB,CANnB;AAOI,kBAAA,QAAQ,EAAEG;AAPd;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAaI,QAAC,IAAD,CAAM,OAAN;AACI,kBAAA,IAAI,EACA,mBAAmB7B,KAF3B;AAII,kBAAA,KAAK,EAAEkC,MAJX;AAKI,kBAAA,QAAQ,EACJrB,CADM,IAEL;AACDY,oBAAAA,kBAAkB,CACdZ,CADc,EAEda,CAFc,CAAlB;AAIH;AAZL;AAAA;AAAA;AAAA;AAAA,wBAbJ;AAAA,iBACSA,CADT;AAAA;AAAA;AAAA;AAAA,sBAFP,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAkGI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACI,QAAC,MAAD;AACI,YAAA,QAAQ,EAAE1B,KAAK,KAAK,CADxB;AAEI,YAAA,SAAS,EAAC,aAFd;AAGI,YAAA,OAAO,EAAE,MAAM;AACXK,cAAAA,YAAY,CAACL,KAAD,EAAQA,KAAK,GAAG,CAAhB,CAAZ;AACH,aALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI,QAAC,MAAD;AACI,YAAA,QAAQ,EAAEA,KAAK,KAAKC,SADxB;AAEI,YAAA,SAAS,EAAC,aAFd;AAGI,YAAA,OAAO,EAAE,MAAM;AACXI,cAAAA,YAAY,CAACL,KAAD,EAAQA,KAAK,GAAG,CAAhB,CAAZ;AACH,aALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlGJ;AAAA;AAAA;AAAA;AAAA;AAAA,cApCJ,eA2JI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AACI,UAAA,SAAS,EAAC,0BADd;AAEI,yBAAY,0BAFhB;AAGI,UAAA,IAAI,EAAC,UAHT;AAII,UAAA,EAAE,EAAC,6BAJP;AAKI,UAAA,KAAK,EAAC,WALV;AAMI,UAAA,OAAO,EAAEE,QAAQ,CAACiC,SANtB;AAOI,UAAA,QAAQ,EAAGtB,CAAD,IAA4C;AAClDV,YAAAA,YAAY,CAACD,QAAQ,CAACgB,EAAV,EAAc,EACtB,GAAGhB,QADmB;AAEtBiC,cAAAA,SAAS,EAAEtB,CAAC,CAACG,MAAF,CAASoB;AAFE,aAAd,CAAZ;AAIH;AAZL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAeI,QAAC,MAAD;AACI,UAAA,OAAO,EAAC,QADZ;AAEI,UAAA,OAAO,EAAE,MAAM;AACXhC,YAAAA,cAAc,CAACF,QAAQ,CAACgB,EAAV,CAAd;AACH,WAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA3JJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAyLH;;GA7PenB,Y;;KAAAA,Y;AA6Pf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Question } from \"../interfaces/question\";\r\n\r\nimport \"./QuestionEdit.css\";\r\n\r\nexport function QuestionEdit ({\r\n    index,\r\n    lastIndex,\r\n    question,\r\n    editQuestion,\r\n    removeQuestion,\r\n    swapQuestion\r\n}: {\r\n    index: number;\r\n    lastIndex: number;\r\n    question: Question;\r\n    editQuestion: (id: number, question: Question)=>void;\r\n    removeQuestion: (id: number)=>void;\r\n    swapQuestion: (index1: number, index2: number)=>void;\r\n}): JSX.Element {\r\n    const [a, b] = useState<number>(\r\n        question.options.findIndex((s: string) => question.expected === s)\r\n    );\r\n\r\n    const handleNumOptions = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        b(0);\r\n        const newNum =\r\n            parseInt(e.target.value) < 1 ? 1 : parseInt(e.target.value);\r\n        editQuestion(question.id, {\r\n            ...question,\r\n            type: \"multiple_choice_question\",\r\n            expected: \"Example Answer\",\r\n            options: Array(newNum).fill(\"Example Answer\")\r\n        });\r\n    };\r\n\r\n    const handleSwitch = () => {\r\n        b(0);\r\n        editQuestion(question.id, {\r\n            ...question,\r\n            type: \"multiple_choice_question\",\r\n            expected: \"Example Answer\",\r\n            options: Array(3).fill(\"Example Answer\")\r\n        });\r\n    };\r\n\r\n    const handlePoints = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    \tquestion.points = parseInt(e.target.value)\r\n        editQuestion(question.id, question);\r\n    };\r\n\r\n    const handleChoiceChange = (\r\n        e: React.ChangeEvent<HTMLInputElement>,\r\n        i: number\r\n    ) => {\r\n        const newOptions = [...question.options];\r\n        newOptions.splice(i, 1, e.target.value);\r\n        editQuestion(question.id, {\r\n            ...question,\r\n            options: newOptions,\r\n            expected: a === i ? e.target.value : question.expected\r\n        });\r\n    };\r\n\r\n    const handleRadioChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const idx = parseInt(e.target.value);\r\n        b(idx);\r\n        editQuestion(question.id, {\r\n            ...question,\r\n            expected: question.options[idx]\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <hr />\r\n            <div className=\"edit_question\">\r\n                <div className=\"edit_title_row\">\r\n                    <div className=\"edit_title_box\">\r\n                        <h4>{index + 1}. </h4>\r\n                        <Form.Group\r\n                            className=\"title_input\"\r\n                            controlId=\"editTitleFormId\"\r\n                        >\r\n                            <Form.Control\r\n                                value={question.body}\r\n                                data-testid=\"edit_question_title\"\r\n                                onChange={(\r\n                                    e: React.ChangeEvent<HTMLInputElement>\r\n                                ) => {\r\n                                    editQuestion(question.id, {\r\n                                        ...question,\r\n                                        body: e.target.value\r\n                                    });\r\n                                }}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                    </div>\r\n                    <div className=\"edit_title_box\">\r\n                        <Form.Group\r\n                            className=\"points_input\"\r\n                            controlId=\"editPointsFormId\"\r\n                        >\r\n                            <Form.Control\r\n                                value={question.points}\r\n                                type=\"number\"\r\n                                onChange={handlePoints}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <h4>pt{question.points !== 1 ? \"s\" : \"\"}</h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"center_section\">\r\n                    <div className=\"edit_answer_box\">\r\n                        <div className=\"type_form\">\r\n                            <Form.Group controlId=\"questionTypeFormId\">\r\n                                <Form.Label>Type: </Form.Label>\r\n                                <Form.Select\r\n                                    className=\"type_dropdown\"\r\n                                    value={question.type}\r\n                                    onChange={handleSwitch}\r\n                                >\r\n                                    <option\r\n                                        data-testid={\r\n                                            \"question_type_dropdown_\" + index\r\n                                        }\r\n                                        value=\"multiple_choice_question\"\r\n                                    >\r\n                                        Multiple Choice\r\n                                    </option>\r\n                                    <option\r\n                                        data-testid={\r\n                                            \"question_type_dropdown_\" + index\r\n                                        }\r\n                                        value=\"short_answer_question\"\r\n                                    >\r\n                                        Short Answer\r\n                                    </option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                            {question.type === \"multiple_choice_question\" && (\r\n                                <>\r\n                                    <Form.Group controlId=\"editNumChoicesId\">\r\n                                        <Form.Label>Choices: </Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"num_choices\"\r\n                                            value={question.options.length}\r\n                                            type=\"number\"\r\n                                            onChange={handleNumOptions}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            {question.type === \"short_answer_question\" && (\r\n                                <Form.Group controlId=\"formEditShortExpectedBox\">\r\n                                    <Form.Label>Answer:</Form.Label>\r\n                                    <Form.Control\r\n                                        value={question.expected}\r\n                                        onChange={(\r\n                                            e: React.ChangeEvent<HTMLInputElement>\r\n                                        ) => {\r\n                                            editQuestion(question.id, {\r\n                                                ...question,\r\n                                                expected: e.target.value\r\n                                            });\r\n                                        }}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            )}\r\n                            {question.type === \"multiple_choice_question\" && (\r\n                                <Form.Group controlId=\"formEditMultipleExpectedBox\">\r\n                                    <Form.Label>Answer:</Form.Label>\r\n                                    {question.options.map(\r\n                                        (option: string, i: number) => (\r\n                                            <div\r\n                                                key={i}\r\n                                                className=\"radio_question_box\"\r\n                                            >\r\n                                                <Form.Check\r\n                                                    type=\"radio\"\r\n                                                    name={\r\n                                                        \"questionChoice\" + index\r\n                                                    }\r\n                                                    value={i}\r\n                                                    checked={a === i}\r\n                                                    onChange={handleRadioChange}\r\n                                                />\r\n                                                <Form.Control\r\n                                                    name={\r\n                                                        \"questionChoice\" + index\r\n                                                    }\r\n                                                    value={option}\r\n                                                    onChange={(\r\n                                                        e: React.ChangeEvent<HTMLInputElement>\r\n                                                    ) => {\r\n                                                        handleChoiceChange(\r\n                                                            e,\r\n                                                            i\r\n                                                        );\r\n                                                    }}\r\n                                                ></Form.Control>\r\n                                            </div>\r\n                                        )\r\n                                    )}\r\n                                </Form.Group>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"swap_button_container\">\r\n                        <Button\r\n                            disabled={index === 0}\r\n                            className=\"swap_button\"\r\n                            onClick={() => {\r\n                                swapQuestion(index, index - 1);\r\n                            }}\r\n                        >\r\n                            ▲\r\n                        </Button>\r\n                        <Button\r\n                            disabled={index === lastIndex}\r\n                            className=\"swap_button\"\r\n                            onClick={() => {\r\n                                swapQuestion(index, index + 1);\r\n                            }}\r\n                        >\r\n                            ▼\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"edit_question_footer\">\r\n                    <Form.Check\r\n                        className=\"published_question_check\"\r\n                        data-testid=\"question_published_check\"\r\n                        type=\"checkbox\"\r\n                        id=\"is_question_published_check\"\r\n                        label=\"Published\"\r\n                        checked={question.published}\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                            editQuestion(question.id, {\r\n                                ...question,\r\n                                published: e.target.checked\r\n                            });\r\n                        }}\r\n                    ></Form.Check>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => {\r\n                            removeQuestion(question.id);\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}