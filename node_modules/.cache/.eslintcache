[{"C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\index.tsx":"1","C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\reportWebVitals.ts":"2","C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\App.tsx":"3","C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\quizzer\\Quizzer.tsx":"4","C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\quizzer\\AddQuizModal.tsx":"5","C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\quizzer\\QuizList.tsx":"6","C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\quizzer\\QuizCard.tsx":"7","C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\quizzer\\QuizView.tsx":"8","C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\quizzer\\QuestionEdit.tsx":"9"},{"size":571,"mtime":1665670300732,"results":"10","hashOfConfig":"11"},{"size":536,"mtime":1665670300748,"results":"12","hashOfConfig":"11"},{"size":1020,"mtime":1666810495422,"results":"13","hashOfConfig":"11"},{"size":4127,"mtime":1666275894681,"results":"14","hashOfConfig":"11"},{"size":2129,"mtime":1665670300735,"results":"15","hashOfConfig":"11"},{"size":1659,"mtime":1665670300742,"results":"16","hashOfConfig":"11"},{"size":993,"mtime":1665670300737,"results":"17","hashOfConfig":"11"},{"size":1056,"mtime":1665670300744,"results":"18","hashOfConfig":"11"},{"size":11660,"mtime":1666811447169,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1rv4rku",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\index.tsx",[],["42","43"],"C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\reportWebVitals.ts",[],"C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\App.tsx",[],"C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\quizzer\\Quizzer.tsx",[],"C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\quizzer\\AddQuizModal.tsx",[],"C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\quizzer\\QuizList.tsx",["44"],"import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Quiz } from \"../interfaces/quiz\";\r\nimport { QuizCard } from \"./QuizCard\";\r\nimport \"./QuizList.css\";\r\nimport { QuizView } from \"./QuizView\";\r\n\r\nexport const QuizList = ({\r\n    quizzes,\r\n    editQuiz,\r\n    deleteQuiz,\r\n    showModal\r\n}: {}) => {\r\n    const [displayId, setDisplayId] = useState<null | number>(null);\r\n\r\n    const handleQuizView = (id: number) => {\r\n        setDisplayId(id);\r\n    };\r\n\r\n    const resetQuizView = () => {\r\n        setDisplayId(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"quiz_list\">\r\n            {!displayId && (\r\n                <>\r\n                    {quizzes.map((quiz: Quiz) => (\r\n                        <QuizCard\r\n                            key={quiz.id}\r\n                            quiz={quiz}\r\n                            handleClick={handleQuizView}\r\n                        ></QuizCard>\r\n                    ))}\r\n                    <Button className=\"add_btn\" onClick={showModal}>\r\n                        Add New Quiz\r\n                    </Button>\r\n                </>\r\n            )}\r\n            {quizzes.map((quiz: Quiz) => {\r\n                if (displayId === quiz.id) {\r\n                    return (\r\n                        <QuizView\r\n                            key={quiz.id}\r\n                            quiz={quiz}\r\n                            editQuiz={editQuiz}\r\n                            deleteQuiz={deleteQuiz}\r\n                            resetView={resetQuizView}\r\n                        ></QuizView>\r\n                    );\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\quizzer\\QuizCard.tsx",["45"],"import React from \"react\";\r\nimport { Quiz } from \"../interfaces/quiz\";\r\n\r\nimport \"./QuizCard.css\";\r\nimport { Question } from \"../interfaces/question\";\r\n\r\nexport const QuizCard = ({\r\n    quiz,\r\n    handleClick\r\n}: {) => {\r\n    const filteredQuestions = quiz.questionList.filter(\r\n        (q: Question): boolean =>\r\n            (quiz.published && q.published) || !quiz.published\r\n    );\r\n\r\n    return (\r\n        <div className=\"quiz_view_card\">\r\n            <div className=\"d-flex align-items-baseline\">\r\n                <h3\r\n                    className=\"title\"\r\n                    onClick={() => {\r\n                        handleClick(quiz.id);\r\n                    }}\r\n                >\r\n                    {quiz.title}\r\n                </h3>\r\n                <p>\r\n                    {filteredQuestions.length} question\r\n                    {filteredQuestions.length !== 1 ? \"s\" : \"\"}\r\n                </p>\r\n            </div>\r\n            <p>{quiz.body}</p>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\quizzer\\QuizView.tsx",["46"],"import React, { useState } from \"react\";\r\nimport { Quiz } from \"../interfaces/quiz\";\r\nimport { QuizExpanded } from \"./QuizExpanded\";\r\nimport { QuizEdit } from \"./QuizEdit\";\r\n\r\nimport \"./QuizView.css\";\r\n\r\nexport const QuizView = ({\r\n    quiz,\r\n    editQuiz,\r\n    deleteQuiz,\r\n    resetView\r\n}: {}) => {\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const switchEdit = () => {\r\n        setEdit(edit);\r\n    };\r\n\r\n    return (\r\n        <div className=\"quiz_card\">\r\n            {edit && (\r\n                <QuizEdit\r\n                    quiz={quiz\r\n                    editQuiz={editQuiz\r\n                    deleteQuiz={deleteQuiz\r\n                    switchEdit={switchEdit\r\n                    resetView={resetView\r\n                ></QuizEdit>\r\n            )\r\n            {!edit && (\r\n                <QuizExpanded\r\n                    quiz={quiz\r\n                    editQuiz={editQuiz\r\n                    resetView={resetView\r\n                    switchEdit={switchEdit\r\n                ></QuizExpanded>\r\n            )\r\n        </div>\r\n    );\r\n;\r\n","C:\\Users\\Michael\\Documents\\CISC275\\Broken Code\\quizzer_start\\src\\quizzer\\QuestionEdit.tsx",["47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":40,"column":39,"nodeType":"54","messageId":"55","endLine":40,"endColumn":41},{"ruleId":null,"fatal":true,"severity":2,"message":"56","line":10,"column":4},{"ruleId":null,"fatal":true,"severity":2,"message":"57","line":25,"column":20},{"ruleId":"58","severity":1,"message":"59","line":3,"column":20,"nodeType":"60","messageId":"61","endLine":3,"endColumn":32},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Parsing error: Property or signature expected.","Parsing error: '}' expected.","@typescript-eslint/no-unused-vars","'QuestionType' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]